<?php
/**
 * Created by PhpStorm.
 * User: 18723
 * Date: 2018/5/21
 * Time: 9:32
 * 对应的数据表 www_type 对数据表的操作
 */
namespace app\admin\model;
use think\Model;
use app\admin\model\Param;

//类型的操作
class Type extends Model{
    //初始化模型
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    //index.html 获取类型列表方法
    public function typeList()
    {
        $list = Type::order('typeid desc')->select(); //获取类型列表
        foreach($list as $key => $value)
        {
            $list[$key]['params'] = Param::where('typeid',$list[$key]['typeid'])->select(); //遍历得到类型对应的参数列表
        }
        return $list; //返回二维数组
    }

    //增加参数方法
    public function addType($date)
    {
        /*
         * 逻辑 1判断类型名是否重复 重复则返回false 2不重复则向数据库添加数据并保存
         */
        $name = Type::where('typename',$date['typename'])->find();
        if(!empty($name)) {
            return false;
        } else  {
            $type = new Type();
            $type->typename = $date['typename'];
            $type->function = $date['function'];
            $type->note = $date['note'];
            $type->save();
            return $type;
        }

    }

    //修改类型方法
    public function editType($date)
    {
        /*
         * 逻辑：1根据typeid找到该数据 不存在返回false 2存在该数据 将获取的参数更新
         */
        $type = Type::where('typeid',$date['typeid'])->find();
        if(empty($type)) {
            return false;
        } else {
            $type->typename = $date['typename'];
            $type->function = $date['function'];
            $type->note = $date['note'];
            $type->save();
            return $type;
        }
    }

    //删除类型方法
    public function delType($typeid)
    {
        /*
         * 逻辑：1获取typeid 2数据表找到数据 delete 3判断成功返回true 否则false
         */
        $type = Type::where('typeid',$typeid)->delete();
        $param = Param::where('typeid',$typeid)->delete();
        if($type !== false && $param !== false) {
            return true;
        } else {
            return false;
        }
    }
}